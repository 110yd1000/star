# Generated by Django 4.2.7 on 2025-08-06 20:35

from django.db import migrations


def populate_sample_data(apps, schema_editor):
    """Populate Country, Province, and City models with sample data"""
    Country = apps.get_model('ads', 'Country')
    Province = apps.get_model('ads', 'Province')
    City = apps.get_model('ads', 'City')
    
    # Create sample countries
    countries_data = [
        {'name': 'South Africa', 'code': 'ZAF', 'currency_code': 'ZAR'},
        {'name': 'United States', 'code': 'USA', 'currency_code': 'USD'},
        {'name': 'United Kingdom', 'code': 'GBR', 'currency_code': 'GBP'},
    ]
    
    countries = {}
    for country_data in countries_data:
        country = Country.objects.create(
            name=country_data['name'],
            code=country_data['code'],
            currency_code=country_data['currency_code']
        )
        countries[country_data['name']] = country
    
    # Sample provinces and cities data
    locations_data = {
        'South Africa': {
            'Western Cape': ['Cape Town', 'Stellenbosch', 'George'],
            'Gauteng': ['Johannesburg', 'Pretoria', 'Sandton'],
            'KwaZulu-Natal': ['Durban', 'Pietermaritzburg', 'Newcastle'],
        },
        'United States': {
            'California': ['Los Angeles', 'San Francisco', 'San Diego'],
            'New York': ['New York City', 'Albany', 'Buffalo'],
            'Texas': ['Houston', 'Austin', 'Dallas'],
        },
        'United Kingdom': {
            'England': ['London', 'Manchester', 'Birmingham'],
            'Scotland': ['Edinburgh', 'Glasgow', 'Aberdeen'],
            'Wales': ['Cardiff', 'Swansea', 'Newport'],
        }
    }
    
    # Create provinces and cities for all countries
    for country_name, provinces_data in locations_data.items():
        country = countries[country_name]
        
        for province_name, cities_list in provinces_data.items():
            # Create province
            province = Province.objects.create(
                country=country,
                name=province_name
            )
            
            # Create cities for this province
            for city_name in cities_list:
                City.objects.create(
                    province=province,
                    name=city_name
                )


def reverse_populate_sample_data(apps, schema_editor):
    """Reverse the data migration"""
    Country = apps.get_model('ads', 'Country')
    Province = apps.get_model('ads', 'Province')
    City = apps.get_model('ads', 'City')
    
    # Remove all created data
    City.objects.all().delete()
    Province.objects.all().delete()
    Country.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('ads', '0003_ad_country_ad_ads_ad_country_479166_idx'),
    ]

    operations = [
        migrations.RunPython(
            populate_sample_data,
            reverse_populate_sample_data
        ),
    ]
